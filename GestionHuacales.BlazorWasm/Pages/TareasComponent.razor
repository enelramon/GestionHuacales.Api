@page "/tareas"
@inject ITareasApiService ApiService

<h3>Lista de Tareas</h3>
<input @bind="nuevaTareaDescripcion" />
<button @onclick="AgregarTarea">Agregar Tarea</button>
@if (isLoading)
{
    <p>Cargando...</p>
}

<ul>
    @foreach (var tarea in tareas)
    {
        <li>@tarea.TareaId - @tarea.Descripcion</li>
    }
</ul>


@code {
    private bool isLoading;
    private List<Tarea> tareas = new();
    private string nuevaTareaDescripcion = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadTareasAsync();
    }

    private async Task LoadTareasAsync()
    {
        isLoading = true;
        var resource = await ApiService.GetTareasAsync();
        if (resource is Resource<List<TareaResponse>>.Success success)
        {
            tareas = success.Data.Select(dto => new Tarea(dto.Id, dto.Descripcion, dto.EstaCompletada)).ToList();
        }
        isLoading = false;
    }

    private async Task AgregarTarea()
    {
        if (!string.IsNullOrWhiteSpace(nuevaTareaDescripcion))
        {
            var request = new TareaRequest(nuevaTareaDescripcion, false);
            var resource = await ApiService.CreateTareaAsync(request);
            if (resource is Resource<TareaResponse>.Success)
            {
                await LoadTareasAsync(); // Recargar la lista
            }
            nuevaTareaDescripcion = "";
        }
    }
}